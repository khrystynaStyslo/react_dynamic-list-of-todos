{"version":3,"sources":["components/User/User.js","components/TodoItem/TodoItem.js","components/TodoList/TodoList.js","api/todos.js","api/users.js","App.js","index.js"],"names":["Users","_ref","name","username","email","react_default","a","createElement","className","TodoItem","todo","style","width","title","User_Users","user","completed","TodoList","todos","sortByName","sortByTitle","sortByCompleted","role","aria-label","onClick","map","TodoItem_TodoItem_TodoItem","key","id","getTodos","fetch","then","response","json","getUsers","getTodosWithUsers","users","_objectSpread","find","item","userId","App","state","originTodos","isLoading","isLoaded","hasError","_this","setState","prevState","sort","b","localeCompare","getData","Promise","all","data","console","log","catch","finally","_this$state","this","length","type","Fragment","TodoList_TodoList_TodoList","React","Component","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.4fdd72ef.chunk.js","sourcesContent":["import React from 'react';\nimport './User.css';\nimport PropTypes from 'prop-types';\n\nexport const Users = ({ name, username,email }) => (\n  <div className=\"card-title\">\n    <h5>User information:</h5>\n    <ul>\n      <li>{name}</li>\n      <li>{username}</li>\n      <li>{email}</li>\n    </ul>\n  </div>\n);\n\nUsers.propTypes = {\n  user: PropTypes.shape({\n    name: PropTypes.string,\n    username: PropTypes.string,\n    email: PropTypes.string,\n  }).isRequired,\n};\n","import React from 'react';\nimport './TodoItem.css';\n\nimport { Users } from '../User/User'\nimport PropTypes from 'prop-types';\n\nexport const TodoItem = ({ todo }) => (\n  <div className=\"card\" style={{ width: '18rem'}}>\n    <h3 className=\"task\">{ todo.title }</h3>\n    <Users {...todo.user} />\n    <h6 className=\"card-subtitle mb-2 text-muted\">\n      { todo.completed ? '\\u2714' : '\\u2718' }\n    </h6>\n  </div>\n);\n\nTodoItem.propTypes = {\n  todo: PropTypes.shape({\n    title: PropTypes.string,\n    completed: PropTypes.bool,\n    user: PropTypes.object,\n  }).isRequired,\n};\n","import React from 'react';\nimport './TodoList.css';\nimport PropTypes from 'prop-types';\n\nimport { TodoItem } from '../TodoItem/TodoItem';\n\nexport const TodoList = ({ todos, sortByName, sortByTitle, sortByCompleted }) => (\n  <div>\n    <div className=\"btn-group\" role=\"group\" aria-label=\"Basic example\">\n      <button onClick={sortByName} className=\"btn btn-dark text-warning\">\n        Sort by name\n      </button>\n      <button onClick={sortByTitle} className=\"btn btn-dark text-warning\">\n        Sort by title\n      </button>\n      <button onClick={sortByCompleted} className=\"btn btn-dark text-warning\">\n        Completed\n      </button>\n    </div>\n  <div className=\"list-cards\">\n    {todos.map(todo => (\n      <TodoItem todo={todo} key={todo.id} />))}\n  </div>\n    </div>\n);\n\nTodoList.propTypes = {\n  todos: PropTypes.arrayOf(PropTypes.object).isRequired,\n};\n","export const getTodos = () => {\n  return fetch(`https://jsonplaceholder.typicode.com/todos`).then(response =>\n    response.json()\n  );\n};\n","export const getUsers = () => {\n  return fetch(`https://jsonplaceholder.typicode.com/users`).then(response =>\n    response.json()\n  );\n};\n","import React from \"react\";\nimport \"./App.css\";\n\nimport { TodoList } from \"./components/TodoList/TodoList\";\n\nimport { getTodos } from \"./api/todos\";\nimport { getUsers } from \"./api/users\";\n\nfunction getTodosWithUsers(todos, users) {\n  return todos.map(todo => ({\n    ...todo,\n    user: users.find(item => item.id === todo.userId)\n  }));\n}\n\nclass App extends React.Component {\n  state = {\n    originTodos: [],\n    todos: [],\n    isLoading: false,\n    isLoaded: false,\n    hasError: false\n  };\n\n  sortByName = () => {\n    this.setState(prevState => ({\n      todos: prevState.originTodos.sort((a, b) =>\n        a.user.name.localeCompare(b.user.name)\n      )\n    }));\n  };\n\n  sortByTitle = () => {\n    this.setState(prevState => ({\n      todos: prevState.originTodos.sort((a, b) =>\n        a.title.localeCompare(b.title)\n      )\n    }));\n  };\n\n  sortByCompleted = () => {\n    this.setState(prevState => ({\n      todos: prevState.originTodos.sort((a, b) =>\n        a.completed < b.completed\n          ? 1\n          : a.completed === b.completed\n          ? a.user.name.localeCompare(b.user.name)\n          : -1\n      )\n    }));\n  };\n\n  getData = () => {\n    this.setState({\n      todos: [],\n      isLoading: true,\n      hasError: false\n    });\n\n    Promise.all([getTodos(), getUsers()])\n      .then(data => {\n        console.log(data);\n        this.setState({\n          todos: getTodosWithUsers(data[0], data[1]),\n          originTodos: getTodosWithUsers(data[0], data[1]),\n          isLoaded: true\n        });\n      })\n      .catch(() => {\n        this.setState({\n          hasError: true\n        });\n      })\n      .finally(() => {\n        this.setState({\n          isLoading: false\n        });\n      });\n  };\n\n  render() {\n    const { todos, isLoading, hasError, isLoaded } = this.state;\n    return (\n      <div className=\"main\">\n        <h1>Static list of todos</h1>\n        {!todos.length && !isLoading && !hasError && (\n          <button\n            type=\"button\"\n            onClick={this.getData}\n            className=\"btn btn-outline-dark\"\n          >\n            Load todos\n          </button>\n        )}\n        {isLoading && (\n          <div className=\"spinner-grow text-dark\" role=\"status\">\n            <span className=\"sr-only\">Loading...</span>\n          </div>\n        )}\n        {hasError && (\n          <>\n            <h3>Something went wrong:(</h3>\n            <button\n              type=\"button\"\n              onClick={this.getData}\n              className=\"btn btn-outline-dark\"\n            >\n              Try again\n            </button>\n          </>\n        )}\n        {isLoaded && (\n          <TodoList\n            todos={todos}\n            sortByName={this.sortByName}\n            sortByTitle={this.sortByTitle}\n            sortByCompleted={this.sortByCompleted}\n          />\n        )}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}