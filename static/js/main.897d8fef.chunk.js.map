{"version":3,"sources":["components/User/User.js","components/TodoItem/TodoItem.js","components/TodoList/TodoList.js","api/todos.js","api/users.js","App.js","index.js"],"names":["Users","_ref","name","username","email","react_default","a","createElement","className","TodoItem","todo","style","width","title","User_Users","user","completed","TodoList","todos","sortByName","sortByTitle","sortByCompleted","role","aria-label","onClick","map","TodoItem_TodoItem_TodoItem","key","id","getTodos","fetch","then","response","json","getUsers","getTodosWithUsers","users","_objectSpread","find","item","userId","App","state","isLoading","isLoaded","hasError","_this","setState","prevState","sort","b","getData","data","Promise","all","catch","finally","_this$state","this","preparedTodos","length","type","Fragment","TodoList_TodoList_TodoList","React","Component","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.897d8fef.chunk.js","sourcesContent":["import React from 'react';\nimport './User.css';\nimport PropTypes from 'prop-types';\n\nexport const Users = ({ name, username,email }) => (\n  <div className=\"card-title\">\n    <h5>User information:</h5>\n    <ul>\n      <li>{name}</li>\n      <li>{username}</li>\n      <li>{email}</li>\n    </ul>\n  </div>\n);\n\nUsers.propTypes = {\n  user: PropTypes.shape({\n    name: PropTypes.string,\n    username: PropTypes.string,\n    email: PropTypes.string,\n  }).isRequired,\n};\n","import React from 'react';\nimport './TodoItem.css';\n\nimport { Users } from '../User/User'\nimport PropTypes from 'prop-types';\n\nexport const TodoItem = ({ todo }) => (\n  <div className=\"card\" style={{ width: '18rem'}}>\n    <h3 className=\"task\">{ todo.title }</h3>\n    <Users {...todo.user} />\n    <h6 className=\"card-subtitle mb-2 text-muted\">\n      { todo.completed ? '\\u2714' : '\\u2718' }\n    </h6>\n  </div>\n);\n\nTodoItem.propTypes = {\n  todo: PropTypes.shape({\n    title: PropTypes.string,\n    completed: PropTypes.bool,\n    user: PropTypes.object,\n  }).isRequired,\n};\n","import React from 'react';\nimport './TodoList.css';\nimport PropTypes from 'prop-types';\n\nimport { TodoItem } from '../TodoItem/TodoItem';\n\nexport const TodoList = ({ todos, sortByName, sortByTitle, sortByCompleted }) => (\n  <div>\n    <div className=\"btn-group\" role=\"group\" aria-label=\"Basic example\">\n      <button onClick={sortByName} className=\"btn btn-secondary\">\n        Sort by name\n      </button>\n      <button onClick={sortByTitle} className=\"btn btn-secondary\">\n        Sort by title\n      </button>\n      <button onClick={sortByCompleted} className=\"btn btn-secondary\">\n        Completed\n      </button>\n    </div>\n  <div className=\"list-cards\">\n    {todos.map(todo => (\n      <TodoItem todo={todo} key={todo.id} />))}\n  </div>\n    </div>\n);\n\nTodoList.propTypes = {\n  todos: PropTypes.arrayOf(PropTypes.object).isRequired,\n};\n","export const getTodos = () => {\n  return fetch(`https://jsonplaceholder.typicode.com/todos`).then(response =>\n    response.json()\n  );\n};\n","export const getUsers = () => {\n  return fetch(`https://jsonplaceholder.typicode.com/users`).then(response =>\n    response.json()\n  );\n};\n","import React from \"react\";\nimport \"./App.css\";\n\nimport { TodoList } from \"./components/TodoList/TodoList\";\n\nimport { getTodos } from \"./api/todos\";\nimport { getUsers } from \"./api/users\";\n\nfunction getTodosWithUsers(todos, users) {\n  return todos.map(todo => ({\n    ...todo,\n    user: users.find(item => item.id === todo.userId)\n  }));\n}\n\nclass App extends React.Component {\n  state = {\n    todos: [],\n    users: [],\n    isLoading: false,\n    isLoaded: false,\n    hasError: false\n  };\n\n  sortByName = () => {\n    this.setState(prevState => ({\n      todos: prevState.todos.sort((a, b) => (a.user > b.user ? 1 : -1))\n    }));\n  };\n\n  sortByTitle = () => {\n    this.setState(prevState => ({\n      todos: prevState.todos.sort((a, b) => (a.title > b.title ? 1 : -1))\n    }));\n  };\n\n  sortByCompleted = () => {\n    this.setState(prevState => ({\n      todos: prevState.todos.sort((a, b) =>\n        a.completed < b.completed ? 1 : -1\n      )\n    }));\n  };\n\n  getData = () => {\n    this.setState({\n      todos: [],\n      isLoading: true,\n      hasError: false\n    });\n\n    getTodos().then(data => {\n      this.setState({\n        todos: data\n      });\n    });\n\n    getUsers().then(data => {\n      this.setState({\n        users: data\n      });\n    });\n\n    Promise.all([getTodos(), getUsers()])\n      .then(() => {\n        this.setState({\n          isLoaded: true\n        });\n      })\n      .catch(() => {\n        this.setState({\n          hasError: true\n        });\n      })\n      .finally(() => {\n        this.setState({\n          isLoading: false\n        });\n      });\n  };\n\n  render() {\n    const { todos, users, isLoading, hasError, isLoaded } = this.state;\n    const preparedTodos = getTodosWithUsers(todos, users);\n    return (\n      <div className=\"main\">\n        <h1>Static list of todos</h1>\n        <p>\n          <span>Todos: </span>\n          {todos.length}\n          <br />\n          <span>Users: </span>\n          {users.length}\n        </p>\n        {!todos.length && !users.length && !isLoading && !hasError && (\n          <button\n            type=\"button\"\n            onClick={this.getData}\n            className=\"btn btn-outline-dark\"\n          >\n            Load todos\n          </button>\n        )}\n        {isLoading && (\n          <div className=\"spinner-grow text-dark\" role=\"status\">\n            <span className=\"sr-only\">Loading...</span>\n          </div>\n        )}\n        {hasError && (\n          <>\n            <h3>Something went wrong:(</h3>\n            <button\n              type=\"button\"\n              onClick={this.getData}\n              className=\"btn btn-outline-dark\"\n            >\n              Try again\n            </button>\n          </>\n        )}\n        {isLoaded && (\n          <TodoList\n            todos={preparedTodos}\n            sortByName={this.sortByName}\n            sortByTitle={this.sortByTitle}\n            sortByCompleted={this.sortByCompleted}\n          />\n        )}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}